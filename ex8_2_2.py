"""
2.	Создайте собственный класс-исключение, обрабатывающий ситуацию деления на ноль.
Проверьте его работу на данных, вводимых пользователем.
При вводе нуля в качестве делителя программадолжна корректно обработ ать эту ситуацию и не завершиться с ошибкой.
"""
class OwnError(Exception):# Собственный класс-исключение — потомок класса Exception
    def __init__(self, param):
        self.param = param

a = input("Введите 1-е положительное число: ")
b = input("Введите 2-е положительное число: ")
try:
    a = int(a)
    b = int(b)
    if b == 0:
        raise OwnError("Вы поделили на ноль")#Оператор raise возбуждает исключение
    res = a / b
except OwnError as ZeroError: #Это исключение перехватывается в этой ветке except и присваивается переменной ZeroError
    print(ZeroError)
except ValueError:
    print('Вы ввели не числа. Программа будет завершена')
else:
    print(f"Все хорошо. Ваше число: {res}")
""" 
ВАЖНО!!!! Выражение  (19-я строка) должно стоять после обработчика исключения (18-я строка)! 
Т.е. сначала предупреждаешьо необходимых исключениях, а только потом 
указываешь на то (выражение) в рез-те чего это исключение может возникнуть
"""


